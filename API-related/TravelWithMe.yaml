swagger: '2.0'
info:
  title: Travel With Me
  description: 'API used in Project TravelWithMe, Cloud Computing with Prof. Sambit Sahu, NYU Fall 2022. This is not the final API. Something else is still under construction.'
  version: 1.0.0
schemes:
  - https
basePath: /v1
produces:
  - application/json
paths:
  /search:
    get:
      summary: search for a hotel.
      description: |
        This API takes in several queries as parameters and returns a list of hotels.
      operationId: searchHotels
      parameters:
        - in: query
          name: adults_number
          schema:
            type: integer
          description: adults number
        - in: query
          name: children_number
          schema:
            type: integer
          description: children number
        - in: query
          name: children_age
          schema:
            type: string
          description: children age (String, comma separated.)
        - in: query
          name: room_number
          schema:
            type: integer
          description: room number
        - in: query
          name: free_cancellation
          schema:
            type: integer
          description: free cancellation (Pre-assigned, `'free_cancellation::1'` for free cancellation.)
        - in: query
          name: checkin_date
          schema:
            type: string
          description: checkin date
        - in: query
          name: checkout_date
          schema:
            type: string
          description: checkout date
          
      produces:
        - application/json
      responses:
        '200':
          description: Hotel results
          schema:
            $ref: '#/definitions/SearchResponse'
        '403':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  # /ml_rec:
  #   get:
  #     summary: give recommendations based on our ML model.
  #     description: |
  #       This API takes in `TBD` and returns a list of hotels after analysis using our model.
  #     operationId: recHotels
  #     produces:
  #       - application/json
  #     responses:
  #       '200':
  #         description: ML-rec-ed hotel results
  #         schema:
  #           $ref: '#/definitions/SearchResponse'
  #       '403':
  #         description: Unauthorized
  #         schema:
  #           $ref: '#/definitions/Error'
  #       '500':
  #         description: Unexpected error
  #         schema:
  #           $ref: '#/definitions/Error'
  # /booking_info:
  #   get:
  #     summary: check booking information of a user.
  #     description: |
  #       This API takes in `user_id` and returns a list of booking information.
  #     operationId: bookingInfo
  #     parameters:
  #       - in: query
  #         name: user_id
  #         schema:
  #           type: string
  #         description: id of an user that attemps to see booking information.
  #     produces:
  #       - application/json
  #     responses:
  #       '200':
  #         description: Booking information of this user
  #         schema:
  #           $ref: '#/definitions/SearchResponse'
  #       '403':
  #         description: Unauthorized
  #         schema:
  #           $ref: '#/definitions/Error'
  #       '500':
  #         description: Unexpected error
  #         schema:
  #           $ref: '#/definitions/Error'
  # /book:
  #   post:
  #     summary: endpoint for booking a hotel.
  #     description: |
  #       This API takes in requests of an user and returns booking status (successful or not).
  #     operationId: bookAHotel
  #     produces:
  #       - application/json
  #     parameters:
  #       - name: body
  #         in: body
  #         schema:
  #           $ref: '#/definitions/Book'
  #     responses:
  #       '200':
  #         description: A Chatbot response
  #         schema:
  #           $ref: '#/definitions/BookResponse'
  #       '403':
  #         description: Unauthorized
  #         schema:
  #           $ref: '#/definitions/Error'
  #       '500':
  #         description: Unexpected error
  #         schema:
  #           $ref: '#/definitions/Error'


definitions:
  Hotel:
    type: object
    properties:
      hotel_url:
        type: string
      hotel_info:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            price:
              type: string
  SearchResponse:
    type: object
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/Hotel'
  Book:
    type: object
    properties:
      user_id:
        type: string
      user_req:
        type: object
        properties:
          hotel_name:
            type: string
          date:
            type: string
          room_type:
            type: string
          num_of_ppl:
            type: string
          name_arr:
            type: array
            items:
              type: string
              properties:
                name:
                  type: string
  BookResponse:
    type: object
    properties:
      result:
        type: string
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
